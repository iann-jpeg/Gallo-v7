const t="https://galloways.co.ke/api",s=!1;async function e(e,a={}){const o=`${t}${e}`;try{const t=await fetch(o,{headers:{"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest",...a.headers},mode:"cors",credentials:"omit",...a});s;const e=t.headers.get("content-type");let c;if(c=e&&e.includes("application/json")?await t.json():await t.text(),!t.ok){const s=(null==c?void 0:c.message)||(null==c?void 0:c.error)||`HTTP ${t.status}: ${t.statusText}`;throw new Error(s)}return c}catch(c){return{success:!1,error:c.message||"Network error - could not connect to server",data:null}}}const a={createClaim:async s=>{try{let e,a={Accept:"application/json","X-Requested-With":"XMLHttpRequest"};s instanceof FormData?e=s:(e=JSON.stringify(s.entries?Object.fromEntries(s.entries()):s),a["Content-Type"]="application/json");const o=await fetch(`${t}/claims`,{method:"POST",headers:a,body:e,mode:"cors",credentials:"omit"}),c=await o.json();return{success:o.ok&&!c.error,data:c.data||c,message:c.message||(o.ok?"Claim submitted successfully":"Failed to submit claim")}}catch(e){return{success:!1,data:null,message:e.message||"Failed to submit claim"}}},getClaims:async()=>{try{const t=await e("/claims");return{success:!t.error,data:t.error?[]:t.data||t||[],message:t.error||"Claims loaded successfully"}}catch(t){return{success:!1,data:[],message:t.message||"Failed to load claims"}}},getClaim:async t=>{try{const s=await e(`/claims/${t}`);return{success:!s.error,data:s.error?null:s.data||s,message:s.error||"Claim loaded successfully"}}catch(s){return{success:!1,data:null,message:s.message||"Failed to load claim"}}},updateClaimStatus:async(t,s)=>{try{const a=await e(`/claims/${t}/status`,{method:"PUT",body:JSON.stringify({status:s})});return{success:!a.error,data:a.error?null:a,message:a.error||"Claim status updated successfully"}}catch(a){return{success:!1,data:null,message:a.message||"Failed to update claim status"}}}},o={createConsultation:async t=>e("/consultations",{method:"POST",body:JSON.stringify(t)}),getConsultations:async()=>e("/consultations",{method:"GET"}),getConsultation:async t=>e(`/consultations/${t}`,{method:"GET"}),updateConsultationStatus:async(t,s)=>e(`/consultations/${t}/status`,{method:"PUT",body:JSON.stringify({status:s})})};export{o as a,a as c};
