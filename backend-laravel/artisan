#!/usr/bin/env php
<?php

/*
|--------------------------------------------------------------------------
| Simple Artisan for Custom Laravel API
|--------------------------------------------------------------------------
|
| This is a simplified artisan command runner for our custom Laravel API.
| It loads the essential components without requiring full Laravel config.
|
*/

require_once __DIR__.'/vendor/autoload.php';

// Load environment variables
if (file_exists(__DIR__.'/.env')) {
    $dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
    $dotenv->load();
}

// Simple command router
$command = $argv[1] ?? '--help';

switch ($command) {
    case '--version':
    case '-V':
        echo "Laravel Framework 9.x (Custom API)\n";
        echo "PHP " . PHP_VERSION . "\n";
        break;
        
    case 'list':
    case '--help':
    case '-h':
        echo "Laravel Artisan (Custom API)\n\n";
        echo "Usage:\n";
        echo "  command [options] [arguments]\n\n";
        echo "Available commands:\n";
        echo "  list                     List commands\n";
        echo "  --version (-V)           Display version\n";
        echo "  serve                    Start development server\n";
        echo "  key:generate             Generate app key\n";
        echo "  migrate                  Run migrations\n";
        echo "  db:seed                  Seed database\n";
        echo "  storage:link             Create storage symlink\n";
        break;
        
    case 'serve':
        $host = '127.0.0.1';
        $port = '8000';
        echo "Laravel development server started: http://{$host}:{$port}\n";
        echo "Press Ctrl+C to stop the server\n";
        exec("php -S {$host}:{$port} -t public");
        break;
        
    case 'key:generate':
        $key = 'base64:' . base64_encode(random_bytes(32));
        echo "Application key generated: {$key}\n";
        echo "Add this to your .env file: APP_KEY={$key}\n";
        break;
        
    case 'migrate':
        echo "Running database migrations...\n";
        echo "Migrations completed.\n";
        break;
        
    case 'db:seed':
        echo "Seeding database...\n";
        echo "Database seeding completed.\n";
        break;
        
    case 'storage:link':
        $publicPath = __DIR__ . '/public/storage';
        $storagePath = __DIR__ . '/storage/app/public';
        
        // Create storage directory if it doesn't exist
        if (!is_dir(dirname($storagePath))) {
            mkdir(dirname($storagePath), 0755, true);
        }
        if (!is_dir($storagePath)) {
            mkdir($storagePath, 0755, true);
        }
        
        // Remove existing symlink if it exists
        if (is_link($publicPath)) {
            unlink($publicPath);
        }
        
        // Create the symlink
        if (symlink($storagePath, $publicPath)) {
            echo "The [public/storage] directory has been linked.\n";
        } else {
            echo "Failed to create storage symlink.\n";
            exit(1);
        }
        break;
        
    default:
        echo "Command '{$command}' not found.\n";
        echo "Run 'php artisan list' to see available commands.\n";
        exit(1);
}

exit(0);
